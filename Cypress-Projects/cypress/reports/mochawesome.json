{
  "stats": {
    "suites": 32,
    "tests": 68,
    "passes": 63,
    "pending": 1,
    "failures": 4,
    "start": "2024-03-21T17:50:10.754Z",
    "end": "2024-03-21T18:07:52.697Z",
    "duration": 1061943,
    "testsRegistered": 68,
    "passPercent": 94.02985074626866,
    "pendingPercent": 1.4705882352941175,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9bf9955f-9926-42b3-b44e-4a3f47a18618",
      "title": "",
      "fullFile": "cypress\\e2e\\deals\\deals.spec.js",
      "file": "cypress\\e2e\\deals\\deals.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13a6cc95-e488-4f36-b1ba-3e7fe454c375",
          "title": "dealer tab",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f01fd4e9-a0ce-4186-b07c-cbb0b7c07ad6",
              "title": "deals",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add deal",
                  "fullTitle": "dealer tab deals should add deal",
                  "timedOut": null,
                  "duration": 50658,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndCheckURL(_urls.DEAL_ADD_URL);\ncy.newDeal('add', _forms.dealForm, newDeal, (0, _helpers.convertFirstCharOfStringToUpperCase)(dealName), 'qualifying', userData);",
                  "err": {},
                  "uuid": "2b734e44-0b3a-452d-83aa-71ed47e312c4",
                  "parentUUID": "f01fd4e9-a0ce-4186-b07c-cbb0b7c07ad6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should list deals",
                  "fullTitle": "dealer tab deals should list deals",
                  "timedOut": null,
                  "duration": 9028,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndCheckURL(_urls.DEAL_LIST_URL);\nconst qualifyingNamesArray = (0, _helpers.listSpecificDataTypes)(['Qualifying'], 'names', userData);\nconst negotionationNamesArray = (0, _helpers.listSpecificDataTypes)(['Negotiation'], 'names', userData);\nconst trialShopmentNamesArray = (0, _helpers.listSpecificDataTypes)(['Trial Shipment'], 'names', userData);\nconst finalNegotiationNamesArray = (0, _helpers.listSpecificDataTypes)(['Final Negotiation'], 'names', userData);\ncy.wait(2000);\ncy.get('[data-stage=\"Qualifying\"]').find('.card-header-count').invoke('text').then(count => {\n  if (count == 0) {\n    cy.get('[data-stage=\"Qualifying\"] .no-deal p').contains('No active Deals');\n  } else {\n    cy.get('[data-stage=\"Qualifying\"] a.hover-link').each(($el, index) => {\n      console.log(qualifyingNamesArray);\n      cy.wrap($el).contains(qualifyingNamesArray[index]);\n    });\n  }\n});\ncy.get('[data-stage=\"Negotiation\"]').find('.card-header-count').invoke('text').then(count => {\n  if (count == 0) {\n    cy.get('[data-stage=\"Negotiation\"] .no-deal p').contains('No active Deals');\n  } else {\n    cy.get('[data-stage=\"Negotiation\"] a.hover-link').each(($el, index) => {\n      cy.wrap($el).contains(negotionationNamesArray[index]);\n    });\n  }\n});\ncy.get('[data-stage=\"Trial Shipment\"]').find('.card-header-count').invoke('text').then(count => {\n  if (count == 0) {\n    cy.get('[data-stage=\"Trial Shipment\"] .no-deal p').contains('No active Deals');\n  } else {\n    cy.get('[data-stage=\"Trial Shipment\"] a.hover-link').each(($el, index) => {\n      cy.wrap($el).contains(trialShopmentNamesArray[index]);\n    });\n  }\n});\ncy.get('[data-stage=\"Final Negotiation\"]').find('.card-header-count').invoke('text').then(count => {\n  if (count == 0) {\n    cy.get('[data-stage=\"Final Negotiation\"] .no-deal p').contains('No active Deals');\n  } else {\n    cy.get('[data-stage=\"Final Negotiation\"] a.hover-link').each(($el, index) => {\n      cy.wrap($el).contains(finalNegotiationNamesArray[index]);\n    });\n  }\n});",
                  "err": {},
                  "uuid": "79100644-1861-4262-9b08-073b25941ffb",
                  "parentUUID": "f01fd4e9-a0ce-4186-b07c-cbb0b7c07ad6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should search deals and find one result",
                  "fullTitle": "dealer tab deals should search deals and find one result",
                  "timedOut": null,
                  "duration": 6561,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.listDealData(['qualifying'], userData).then(response => {\n  const searchTerm = response.body.Deals[0].DealName;\n  cy.navigateAndCheckURL(_urls.DEAL_LIST_URL);\n  cy.get('a[data-view=\"list\"]').click();\n  cy.searchResults(searchTerm);\n  cy.get('#btnSearch').click();\n  cy.get('#deal-datatable .hover-link').should('have.text', searchTerm);\n  cy.get('#deal-datatable').find('td').first().find('a').should('have.html', searchTerm);\n});",
                  "err": {},
                  "uuid": "c44c6f34-b08a-4658-a9fc-1482301afee3",
                  "parentUUID": "f01fd4e9-a0ce-4186-b07c-cbb0b7c07ad6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should search deals and find no results",
                  "fullTitle": "dealer tab deals should search deals and find no results",
                  "timedOut": null,
                  "duration": 3452,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndCheckURL(_urls.DEAL_LIST_URL);\ncy.get('a[data-view=\"list\"]').click();\nconst searchTerm = 'rhrhhfhfhjhj';\ncy.searchResults(searchTerm);\ncy.get('#deal-datatable').find('tr').should('have.length', 1);",
                  "err": {},
                  "uuid": "8cb8ef02-086f-4ee5-bc1e-ce704bc2ebfa",
                  "parentUUID": "f01fd4e9-a0ce-4186-b07c-cbb0b7c07ad6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "888afdc6-c125-40ba-a4a7-1bab99dbda3b",
                  "title": "deal validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "the new deal form has the correct validation messages",
                      "fullTitle": "dealer tab deals deal validation the new deal form has the correct validation messages",
                      "timedOut": null,
                      "duration": 4911,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateAndCheckURL(_urls.DEAL_ADD_URL);\ncy.wait(2000);\ncy.get('#btnSave').click({\n  force: true\n}); // validation checks\nconst validationChecker = (fieldType, fieldName) => {\n  const validationMessage = 'Required';\n  const errorBorderTextBox = fieldName => `.error[id=\"${fieldName}\"]`;\n  const errorBorderDropdown = fieldName => `.error-border[aria-labelledby=\"select2-${fieldName}-container\"]`;\n  const errorTextSelector = fieldName => `.error-text > #${fieldName}-error`;\n  if (fieldType == 'textbox') {\n    cy.get(errorBorderTextBox(fieldName)).should('have.css', 'border-color').and('eq', 'rgb(205, 43, 30)');\n  } else if (fieldType == 'dropdown') {\n    cy.get(errorBorderDropdown(fieldName)).should('have.css', 'border-color').and('eq', 'rgb(205, 43, 30)');\n  }\n  cy.get(errorTextSelector(fieldName)).should('have.text', validationMessage);\n};\ncy.get('.form-group:nth-child(1) .select2-selection.select2-selection--multiple.error-border').should('have.css', 'border-color').and('eq', 'rgb(205, 43, 30)');\ncy.get('.form-group:nth-child(2) .select2-selection.select2-selection--multiple.error-border').should('have.css', 'border-color').and('eq', 'rgb(205, 43, 30)');\nvalidationChecker('textbox', 'txtDealName');\nvalidationChecker('dropdown', 'ddlCompany');\nvalidationChecker('textbox', 'txtProposalDate');\nvalidationChecker('textbox', 'txtDecisionDate');\nvalidationChecker(undefined, 'ddlCompetitors');\nvalidationChecker(undefined, 'ddlCommodities');\nvalidationChecker('dropdown', 'ddlIndustry');",
                      "err": {},
                      "uuid": "be9cea9d-e8a4-49c9-ab75-908ba8f76e73",
                      "parentUUID": "888afdc6-c125-40ba-a4a7-1bab99dbda3b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "be9cea9d-e8a4-49c9-ab75-908ba8f76e73"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4911,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [
                "2b734e44-0b3a-452d-83aa-71ed47e312c4",
                "79100644-1861-4262-9b08-073b25941ffb",
                "c44c6f34-b08a-4658-a9fc-1482301afee3",
                "8cb8ef02-086f-4ee5-bc1e-ce704bc2ebfa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 69699,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "12f58ae8-edad-4104-be89-89473f0cf844",
              "title": "deal list view",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "dbfaee54-1990-4b81-861a-49404294d3bf",
                  "title": "validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "no deals on list view shows meaningful message",
                      "fullTitle": "dealer tab deal list view validation no deals on list view shows meaningful message",
                      "timedOut": null,
                      "duration": 3194,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept('/api/GlobalDeal/GetGlobalDeals', {\n  fixture: 'deals/noDeals.json'\n});\ncy.navigateToListView('noData');\ncy.get('#divNoItems').should('be.visible');\ncy.get('#divNoItems p.language-entry').should('have.text', 'No Deals Found');\ncy.get('#divNoItems a.edit_link.btn-hover.new-deal').contains('Add Deal');",
                      "err": {},
                      "uuid": "d60da09c-27d3-4a9b-93c3-4c57b4c55766",
                      "parentUUID": "dbfaee54-1990-4b81-861a-49404294d3bf",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d60da09c-27d3-4a9b-93c3-4c57b4c55766"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3194,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "dcf2c090-7923-4e85-a157-310ba66aeb4a",
                  "title": "navigating and selecting",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "opening list view will display list of deals",
                      "fullTitle": "dealer tab deal list view navigating and selecting opening list view will display list of deals",
                      "timedOut": null,
                      "duration": 6207,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateToListView('data');\nconst dealLength = dealData.Deals.length;\ncy.get('#deal-datatable > tbody > tr').should('have.length', dealLength);",
                      "err": {},
                      "uuid": "5065e9ca-7eec-4175-a930-35b6829efbeb",
                      "parentUUID": "dcf2c090-7923-4e85-a157-310ba66aeb4a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "select deal from list view",
                      "fullTitle": "dealer tab deal list view navigating and selecting select deal from list view",
                      "timedOut": null,
                      "duration": 26738,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const firstDealId = dealData.Deals[0].DealId;\nconst firstDealName = dealData.Deals[0].DealName;\nconst firstDealSalesStage = dealData.Deals[0].SalesStageName;\ncy.scrollUntilNoNewList();\ncy.get(`#deal-datatable > tbody > tr[data-id=\"${firstDealId}\"]`).contains(firstDealName).click({\n  force: true\n});\ncy.checkDealStageOnOverview(firstDealName, firstDealSalesStage.toLowerCase());",
                      "err": {
                        "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `#deal-datatable > tbody > tr[data-id=\"312419\"]`, but never found it.",
                        "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `#deal-datatable > tbody > tr[data-id=\"312419\"]`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/deals/deals.spec.js:327:11)",
                        "diff": null
                      },
                      "uuid": "d975ac2f-ca0a-4ecc-a92d-66e09a7369b7",
                      "parentUUID": "dcf2c090-7923-4e85-a157-310ba66aeb4a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5065e9ca-7eec-4175-a930-35b6829efbeb"
                  ],
                  "failures": [
                    "d975ac2f-ca0a-4ecc-a92d-66e09a7369b7"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 32945,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "85c6207a-3044-4622-80e4-7665a07b3c68",
                  "title": "filtering list view",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Filter inactive deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter inactive deals",
                      "timedOut": null,
                      "duration": 44358,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'inactive',\n  newFilterWording: 'Inactive',\n  newFilterClassName: 'inactive'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['lost', 'stalled'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Lost', 'Stalled'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Final Negotiation', 'Trial Shipment']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "f4694138-bbb3-4286-b174-9e8e2d8951fd",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter qualifying deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter qualifying deals",
                      "timedOut": null,
                      "duration": 41339,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'Qualifying',\n  newFilterWording: 'Qualifying',\n  newFilterClassName: 'qualifying'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['qualifying'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Qualifying'],\n  arrayToExclude: ['Negotiation', 'Final Negotiation', 'Trial Shipment', 'Won', 'Lost', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {
                        "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `table > tbody > tr[data-id=\"312431\"] .hover-link`, but never found it.",
                        "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `table > tbody > tr[data-id=\"312431\"] .hover-link`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands/deals.js:83:7)",
                        "diff": null
                      },
                      "uuid": "6a937ecb-68e9-4306-b799-ef0282167c53",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter negotiation deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter negotiation deals",
                      "timedOut": null,
                      "duration": 14964,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'Negotiation',\n  newFilterWording: 'Negotiation',\n  newFilterClassName: 'negotiation'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['negotiation'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Negotiation'],\n  arrayToExclude: ['Qualifying', 'Final Negotiation', 'Trial Shipment', 'Won', 'Lost', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "5f39773d-15eb-40c7-b0d1-6fad40c118bd",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter trial shipment deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter trial shipment deals",
                      "timedOut": null,
                      "duration": 14723,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'Trial Shipment',\n  newFilterWording: 'Trial Shipment',\n  newFilterClassName: 'trialshipment'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['trial shipment'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Trial Shipment'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Final Negotiation', 'Won', 'Lost', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "dc0c4f0a-354a-498f-b528-ad6d98635d81",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter final negotiation deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter final negotiation deals",
                      "timedOut": null,
                      "duration": 14548,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'Final Negotiation',\n  newFilterWording: 'Final Negotiation',\n  newFilterClassName: 'finalnegotiation'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['final negotiation'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Final Negotiation'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Trial Shipment', 'Won', 'Lost', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "6ddebf68-e063-434c-9b81-4ae56a0f0372",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter won deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter won deals",
                      "timedOut": null,
                      "duration": 4285,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'won',\n  newFilterWording: 'Won',\n  newFilterClassName: 'won'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['won'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Won'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Trial Shipment', 'Final Negotiation', 'Lost', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "231e264b-b847-4869-bbb8-6fb916514edd",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter lost deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter lost deals",
                      "timedOut": null,
                      "duration": 15332,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'lost',\n  newFilterWording: 'Lost',\n  newFilterClassName: 'lost'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['lost'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Lost'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Trial Shipment', 'Final Negotiation', 'Won', 'Stalled']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "cc6b8d78-9f7a-4bda-9420-cf41fe1122de",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter stalled deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter stalled deals",
                      "timedOut": null,
                      "duration": 16018,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'stalled',\n  newFilterWording: 'Stalled',\n  newFilterClassName: 'stalled'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['stalled'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Stalled'],\n  arrayToExclude: ['Qualifying', 'Negotiation', 'Trial Shipment', 'Final Negotiation', 'Won', 'Lost']\n};\ncy.listViewDeals(listViewData);",
                      "err": {},
                      "uuid": "63fc3818-dfc1-4b15-9e17-c380529e1765",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Filter all deals",
                      "fullTitle": "dealer tab deal list view filtering list view Filter all deals",
                      "timedOut": null,
                      "duration": 34438,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const filterData = {\n  desiredFilter: 'all',\n  newFilterWording: 'All',\n  newFilterClassName: 'all'\n};\ncy.toggleListViewFilter(filterData);\nconst testArray = ['qualifying', 'negotiation', 'trial shipment', 'final negotiation', 'won', 'lost', 'stalled'];\nconst inactiveDealNames = (0, _helpers.listSpecificDataTypes)(testArray, 'names', userData);\nconst inactiveDealIds = (0, _helpers.listSpecificDataTypes)(testArray, 'id', userData);\nconst inactiveSalesTypes = (0, _helpers.listSpecificDataTypes)(testArray, 'dealTypes', userData);\nconst listViewData = {\n  idsArray: inactiveDealIds,\n  nameArray: inactiveDealNames,\n  salesStageArray: inactiveSalesTypes,\n  arrayToInclude: ['Qualifying', 'Negotiation', 'Trial Shipment', 'Final Negotiation', 'Stalled', 'Lost'],\n  arrayToExclude: [' ']\n};\ncy.listViewDeals(listViewData);",
                      "err": {
                        "message": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `table > tbody > tr[data-id=\"312436\"] .hover-link`, but never found it.",
                        "estack": "AssertionError: Timed out retrying after 25000ms: Expected to find element: `table > tbody > tr[data-id=\"312436\"] .hover-link`, but never found it.\n    at Context.eval (webpack:///./cypress/support/commands/deals.js:83:7)",
                        "diff": null
                      },
                      "uuid": "dd162f85-589b-4f5b-ad59-df01ecfb0d96",
                      "parentUUID": "85c6207a-3044-4622-80e4-7665a07b3c68",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f4694138-bbb3-4286-b174-9e8e2d8951fd",
                    "5f39773d-15eb-40c7-b0d1-6fad40c118bd",
                    "dc0c4f0a-354a-498f-b528-ad6d98635d81",
                    "6ddebf68-e063-434c-9b81-4ae56a0f0372",
                    "231e264b-b847-4869-bbb8-6fb916514edd",
                    "cc6b8d78-9f7a-4bda-9420-cf41fe1122de",
                    "63fc3818-dfc1-4b15-9e17-c380529e1765"
                  ],
                  "failures": [
                    "6a937ecb-68e9-4306-b799-ef0282167c53",
                    "dd162f85-589b-4f5b-ad59-df01ecfb0d96"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 200005,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9f8466f3-2efd-4baa-9893-9a67d1a58526",
              "title": "won, lost and stalled deals",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a187cb9d-f5d4-4a53-8b53-83f90de24b5f",
                  "title": "edit",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Edit deal and change deal status to Won and select a reason",
                      "fullTitle": "dealer tab won, lost and stalled deals edit Edit deal and change deal status to Won and select a reason",
                      "timedOut": null,
                      "duration": 25307,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const dealForm = {\n  wonLostReason: {\n    id: 'ddlWonLostReason',\n    type: 'select',\n    option: {\n      force: true\n    }\n  }\n};\nconst newDeal = {\n  wonLostReason: 'Relationship'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\ncy.checkDealStageOnOverview(dealName, 'qualifying');\ncy.editDeal();\ncy.selectSalesStage('Won');\ncy.newDeal('edit', dealForm, newDeal, dealName, 'won', userData);",
                      "err": {},
                      "uuid": "8be32c12-ae40-4f2d-9fd8-6232472fec62",
                      "parentUUID": "a187cb9d-f5d4-4a53-8b53-83f90de24b5f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Edit deal and change deal status to Lost and select a reason",
                      "fullTitle": "dealer tab won, lost and stalled deals edit Edit deal and change deal status to Lost and select a reason",
                      "timedOut": null,
                      "duration": 20167,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const dealForm = {\n  wonLostReason: {\n    id: 'ddlWonLostReason',\n    type: 'select',\n    option: {\n      force: true\n    }\n  }\n};\nconst newDeal = {\n  wonLostReason: 'Competition'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\ncy.checkDealStageOnOverview(dealName, 'qualifying');\ncy.editDeal();\ncy.selectSalesStage('Lost');\ncy.newDeal('edit', dealForm, newDeal, dealName, 'lost', userData);",
                      "err": {},
                      "uuid": "60236a3c-6faf-4d56-b321-5b4116b5312f",
                      "parentUUID": "a187cb9d-f5d4-4a53-8b53-83f90de24b5f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Edit deal and change deal status to Stalled",
                      "fullTitle": "dealer tab won, lost and stalled deals edit Edit deal and change deal status to Stalled",
                      "timedOut": null,
                      "duration": 18411,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const dealForm = {\n  wonLostReason: {\n    id: 'ddlWonLostReason',\n    type: 'select',\n    option: {\n      force: true\n    }\n  }\n};\nconst newDeal = {\n  dealComment: 'test'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\ncy.checkDealStageOnOverview(dealName, 'qualifying');\ncy.editDeal();\ncy.selectSalesStage('Stalled');\ncy.newDeal('edit', dealForm, newDeal, dealName, 'stalled', userData);",
                      "err": {},
                      "uuid": "f0d74837-1779-42fd-838c-c1b2084e5e3d",
                      "parentUUID": "a187cb9d-f5d4-4a53-8b53-83f90de24b5f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8be32c12-ae40-4f2d-9fd8-6232472fec62",
                    "60236a3c-6faf-4d56-b321-5b4116b5312f",
                    "f0d74837-1779-42fd-838c-c1b2084e5e3d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 63885,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "5c0fbb8c-ff2c-4fed-bc4c-d5b4b81eae34",
                  "title": "won and lost reason dropdown",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "won reason dropdowns displays correct values",
                      "fullTitle": "dealer tab won, lost and stalled deals won and lost reason dropdown won reason dropdowns displays correct values",
                      "timedOut": null,
                      "duration": 122,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "51ed8211-9a05-43d1-8e74-842ecaed4caa",
                      "parentUUID": "5c0fbb8c-ff2c-4fed-bc4c-d5b4b81eae34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "lost reason dropdown displays correct values",
                      "fullTitle": "dealer tab won, lost and stalled deals won and lost reason dropdown lost reason dropdown displays correct values",
                      "timedOut": null,
                      "duration": 55,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "6578da98-30cd-4ca4-867d-7499eb3d04b4",
                      "parentUUID": "5c0fbb8c-ff2c-4fed-bc4c-d5b4b81eae34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51ed8211-9a05-43d1-8e74-842ecaed4caa",
                    "6578da98-30cd-4ca4-867d-7499eb3d04b4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 177,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e96fa2a6-973f-4885-9738-ff5724d4b495",
              "title": "deal widgets without data",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "dd96af18-25c4-4524-a1d4-4d44691aff23",
                  "title": "last activity and next widgets do not display with no event or task",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Last Activity doesn't display with no event or task",
                      "fullTitle": "dealer tab deal widgets without data last activity and next widgets do not display with no event or task Last Activity doesn't display with no event or task",
                      "timedOut": null,
                      "duration": 9352,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.noWidgetVisible('lastActivity');",
                      "err": {},
                      "uuid": "4e3cd7a4-b4d0-4748-8562-4b4e8c77a986",
                      "parentUUID": "dd96af18-25c4-4524-a1d4-4d44691aff23",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Next widget doesn't display with no event or task",
                      "fullTitle": "dealer tab deal widgets without data last activity and next widgets do not display with no event or task Next widget doesn't display with no event or task",
                      "timedOut": null,
                      "duration": 281,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.noWidgetVisible('next');",
                      "err": {},
                      "uuid": "3a951540-5883-4e1f-b7a8-16edeca7cc2c",
                      "parentUUID": "dd96af18-25c4-4524-a1d4-4d44691aff23",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4e3cd7a4-b4d0-4748-8562-4b4e8c77a986",
                    "3a951540-5883-4e1f-b7a8-16edeca7cc2c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 9633,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "bfe52b87-d6df-4bbe-af3e-9847f7136bc2",
              "title": "deal widgets with data",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "15c3b9a6-eeec-4da4-90cc-817d6b235338",
                  "title": "widget functionality",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Selecting company from company widget takes user to correct company",
                      "fullTitle": "dealer tab deal widgets with data widget functionality Selecting company from company widget takes user to correct company",
                      "timedOut": null,
                      "duration": 15071,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  url: `/api/GlobalDeal/GetGlobalDeals`,\n  method: 'POST'\n}).as('getCompany');\ncy.get('#lblCompanyName').should('have.text', companyNameWidgets).click();\ncy.wait('@getCompany');\ncy.get('.page-title #lblCompanyName').should('have.text', companyNameWidgets);",
                      "err": {},
                      "uuid": "538f881e-e03a-4ea9-832e-dcb5ab2cf8f0",
                      "parentUUID": "15c3b9a6-eeec-4da4-90cc-817d6b235338",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Selecting contact from contact widget takes user to correct contact",
                      "fullTitle": "dealer tab deal widgets with data widget functionality Selecting contact from contact widget takes user to correct contact",
                      "timedOut": null,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "8530a892-b763-4f2b-93f2-217c3dc0fa37",
                      "parentUUID": "15c3b9a6-eeec-4da4-90cc-817d6b235338",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "538f881e-e03a-4ea9-832e-dcb5ab2cf8f0"
                  ],
                  "failures": [],
                  "pending": [
                    "8530a892-b763-4f2b-93f2-217c3dc0fa37"
                  ],
                  "skipped": [],
                  "duration": 15071,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "58557a9e-0550-479f-b15c-ef15f252911d",
                  "title": "next and last actitivty with event",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deal next widget with data - event",
                      "fullTitle": "dealer tab deal widgets with data next and last actitivty with event Deal next widget with data - event",
                      "timedOut": null,
                      "duration": 32517,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const eventData = {\n  name: eventTitle,\n  date: `${(0, _moment.default)().add(5, 'days').format('ddd, DD-MMM-YY')} 15:00`,\n  time: '15:00 - 16:00 Pacific Time',\n  location: 'Manchester',\n  type: 'Meeting'\n};\nconst {\n  name,\n  date,\n  time,\n  location,\n  type\n} = eventData;\ncy.checkNextWidgetData('event', 'EVENT', name, date, time, location, type);",
                      "err": {
                        "message": "AssertionError: Timed out retrying after 25000ms: expected '<span#TaskNextLastActivity_lblUpcomingEventStartEndTime>' to have text '15:00 - 16:00 Pacific Time', but the text was '16:00 - 17:00 Pacific Time'",
                        "estack": "AssertionError: Timed out retrying after 25000ms: expected '<span#TaskNextLastActivity_lblUpcomingEventStartEndTime>' to have text '15:00 - 16:00 Pacific Time', but the text was '16:00 - 17:00 Pacific Time'\n    at Context.eval (webpack:///./cypress/support/commands/companies.js:386:7)",
                        "diff": "- '16:00 - 17:00 Pacific Time'\n+ '15:00 - 16:00 Pacific Time'\n"
                      },
                      "uuid": "30069edf-af70-4872-b18a-f7bbd8d2da65",
                      "parentUUID": "58557a9e-0550-479f-b15c-ef15f252911d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Deal last activity widget - event",
                      "fullTitle": "dealer tab deal widgets with data next and last actitivty with event Deal last activity widget - event",
                      "timedOut": null,
                      "duration": 152,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const todaysDate = (0, _moment.default)();\nconst eventData = {\n  activity: 'EVENT',\n  eventName: eventTitle,\n  added: `${todaysDate.format('DD-MMM-YY')}`,\n  addedBy: `${salesRepName}`\n};\nconst {\n  activity,\n  eventName,\n  added,\n  addedBy\n} = eventData;\ncy.checkActivityWidget(activity, eventName, added, addedBy);",
                      "err": {},
                      "uuid": "53b5b4a5-0366-4ff5-9ce7-d38c09341d8d",
                      "parentUUID": "58557a9e-0550-479f-b15c-ef15f252911d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "53b5b4a5-0366-4ff5-9ce7-d38c09341d8d"
                  ],
                  "failures": [
                    "30069edf-af70-4872-b18a-f7bbd8d2da65"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 32669,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "f199c529-314e-4b7f-ba70-b9eb7c323586",
                  "title": "next and last actitivty with task",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Contact next widget with data - task",
                      "fullTitle": "dealer tab deal widgets with data next and last actitivty with task Contact next widget with data - task",
                      "timedOut": null,
                      "duration": 8580,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const todaysDate = (0, _moment.default)();\nconst taskData = {\n  name: newTaskName,\n  date: `${todaysDate.add(2, 'days').format('DD-MMM-YY')}`,\n  time: '',\n  location: '',\n  type: ''\n};\nconst {\n  name,\n  date,\n  time,\n  location,\n  type\n} = taskData;\ncy.checkNextWidgetData('task', 'TASK', name, date, time, location, type);",
                      "err": {},
                      "uuid": "baa45eba-dea0-4790-ad32-895e2814d77f",
                      "parentUUID": "f199c529-314e-4b7f-ba70-b9eb7c323586",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Contact last activity widget - task",
                      "fullTitle": "dealer tab deal widgets with data next and last actitivty with task Contact last activity widget - task",
                      "timedOut": null,
                      "duration": 167,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const todaysDate = (0, _moment.default)();\nconst eventData = {\n  activity: 'TASK',\n  eventName: newTaskName,\n  added: `${todaysDate.format('DD-MMM-YY')}`,\n  addedBy: `${salesRepName}`\n};\nconst {\n  activity,\n  eventName,\n  added,\n  addedBy\n} = eventData;\ncy.checkActivityWidget(activity, eventName, added, addedBy);",
                      "err": {},
                      "uuid": "5e31dfcb-d870-456b-9e0e-d94fcb67fe2e",
                      "parentUUID": "f199c529-314e-4b7f-ba70-b9eb7c323586",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "baa45eba-dea0-4790-ad32-895e2814d77f",
                    "5e31dfcb-d870-456b-9e0e-d94fcb67fe2e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 8747,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f52164bd-a803-4a9c-b168-098459f7f559",
              "title": "deal quotes",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "f9fa0449-5e41-4b7e-9327-7b029e84b6f9",
                  "title": "validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "d398d410-8871-4231-895c-1a924088e902",
                      "title": "quotes page",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "No quotes returned displays the no quotes page",
                          "fullTitle": "dealer tab deal quotes validation quotes page No quotes returned displays the no quotes page",
                          "timedOut": null,
                          "duration": 38866,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.intercept('api/quote/GetQuotes', {\n  \"CurrencySymbol\": \"$\",\n  \"IsLastPage\": true,\n  \"OverdueGlobalQuoteCount\": 0,\n  \"OverdueGlobalQuotes\": [],\n  \"GlobalQuotes\": [],\n  \"GlobalQuotesExtended\": []\n});\ncy.reload();\ncy.noQuotesPageDisplayed();",
                          "err": {},
                          "uuid": "d7d9a97a-830f-4cf5-9133-4f9216914169",
                          "parentUUID": "d398d410-8871-4231-895c-1a924088e902",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Add quote button in body displays form",
                          "fullTitle": "dealer tab deal quotes validation quotes page Add quote button in body displays form",
                          "timedOut": null,
                          "duration": 10883,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.intercept('api/quote/GetQuotes', {\n  \"CurrencySymbol\": \"$\",\n  \"IsLastPage\": true,\n  \"OverdueGlobalQuoteCount\": 0,\n  \"OverdueGlobalQuotes\": [],\n  \"GlobalQuotes\": [],\n  \"GlobalQuotesExtended\": []\n});\ncy.reload();\ncy.openQuotesForm('body');",
                          "err": {},
                          "uuid": "d5af2847-597a-46dd-a281-10559aabe548",
                          "parentUUID": "d398d410-8871-4231-895c-1a924088e902",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Add quote button in header displays form",
                          "fullTitle": "dealer tab deal quotes validation quotes page Add quote button in header displays form",
                          "timedOut": null,
                          "duration": 7404,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.openQuotesForm('header');",
                          "err": {},
                          "uuid": "2a740d3d-c3c8-45a3-be63-cf41ceda19a7",
                          "parentUUID": "d398d410-8871-4231-895c-1a924088e902",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "d7d9a97a-830f-4cf5-9133-4f9216914169",
                        "d5af2847-597a-46dd-a281-10559aabe548",
                        "2a740d3d-c3c8-45a3-be63-cf41ceda19a7"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 57153,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    },
                    {
                      "uuid": "86695112-f441-41b7-9f0e-8a4acaeccf58",
                      "title": "quotes form",
                      "fullFile": "",
                      "file": "",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "Quote name and valid until date are required",
                          "fullTitle": "dealer tab deal quotes validation quotes form Quote name and valid until date are required",
                          "timedOut": null,
                          "duration": 7482,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.quotesFormRequiredFields();",
                          "err": {},
                          "uuid": "0f15503a-af93-48cc-98e9-7bc70ab95ab9",
                          "parentUUID": "86695112-f441-41b7-9f0e-8a4acaeccf58",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Cancel out of form using cross",
                          "fullTitle": "dealer tab deal quotes validation quotes form Cancel out of form using cross",
                          "timedOut": null,
                          "duration": 7866,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.closeQuotesForm('');",
                          "err": {},
                          "uuid": "83850959-cb6e-451a-bf85-3e7277cd7d28",
                          "parentUUID": "86695112-f441-41b7-9f0e-8a4acaeccf58",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Cancel out of form via cancel button",
                          "fullTitle": "dealer tab deal quotes validation quotes form Cancel out of form via cancel button",
                          "timedOut": null,
                          "duration": 7823,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.closeQuotesForm('body');",
                          "err": {},
                          "uuid": "726ccc5c-d563-4b99-ae6f-befab1049a78",
                          "parentUUID": "86695112-f441-41b7-9f0e-8a4acaeccf58",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "Company and deal locked on form",
                          "fullTitle": "dealer tab deal quotes validation quotes form Company and deal locked on form",
                          "timedOut": null,
                          "duration": 7575,
                          "state": "passed",
                          "speed": "medium",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "cy.quotesFieldsReadOnly('deals', companyName, '', newDealName);",
                          "err": {},
                          "uuid": "cd7b775c-e91b-4d47-b902-dc1506fd121e",
                          "parentUUID": "86695112-f441-41b7-9f0e-8a4acaeccf58",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0f15503a-af93-48cc-98e9-7bc70ab95ab9",
                        "83850959-cb6e-451a-bf85-3e7277cd7d28",
                        "726ccc5c-d563-4b99-ae6f-befab1049a78",
                        "cd7b775c-e91b-4d47-b902-dc1506fd121e"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 30746,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 2000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "184285e4-2e1b-4266-be80-2ab1cce23608",
              "title": "events",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "0178b3af-df9b-4fe5-9f2d-baa1aeb8bca4",
                  "title": "event validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "No events on deal displays meaningful message",
                      "fullTitle": "dealer tab events event validation No events on deal displays meaningful message",
                      "timedOut": null,
                      "duration": 9252,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.noEventsOnTab();",
                      "err": {},
                      "uuid": "851a8496-5020-405d-b458-41bd89d60c71",
                      "parentUUID": "0178b3af-df9b-4fe5-9f2d-baa1aeb8bca4",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "New event form pre-populates deal and company",
                      "fullTitle": "dealer tab events event validation New event form pre-populates deal and company",
                      "timedOut": null,
                      "duration": 587,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.selectAddEventHeader();\ncy.get('#select2-ddlCompany-container').contains(companyName);\ncy.get(`ul.select2-selection__rendered > li.select2-selection__choice[title=\"${newDealName}\"]`).contains(newDealName);",
                      "err": {},
                      "uuid": "ecb5a561-6846-4c62-a564-257a5f13199c",
                      "parentUUID": "0178b3af-df9b-4fe5-9f2d-baa1aeb8bca4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "851a8496-5020-405d-b458-41bd89d60c71",
                    "ecb5a561-6846-4c62-a564-257a5f13199c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 9839,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "9fc8d421-a00f-4be7-8b1f-ecae1fd9737c",
                  "title": "deal event functionality",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add deal events",
                      "fullTitle": "dealer tab events deal event functionality should add deal events",
                      "timedOut": null,
                      "duration": 21387,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\ncy.intercept({\n  method: 'POST',\n  url: '/api/CalendarEvent/SaveCalendarEvent'\n}).as('saveEvent');\ncy.navigateToDealTab('events');\ncy.addEventOnTab(newEvent, false);\ncy.wait('@saveEvent').then(xhr => {\n  const eventID = xhr.response.body;\n  cy.get(`[data-event-id=\"${eventID}\"]`).should('be.visible');\n  cy.get(`[data-event-id=\"${eventID}\"] .hover-link`).contains(eventTitle);\n  cy.removeEventAPI(eventID, false, userData);\n});",
                      "err": {},
                      "uuid": "77f99412-5f98-4d40-aebb-74ce9fdce0da",
                      "parentUUID": "9fc8d421-a00f-4be7-8b1f-ecae1fd9737c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should list deal events",
                      "fullTitle": "dealer tab events deal event functionality should list deal events",
                      "timedOut": null,
                      "duration": 9045,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const eventName = 'Event for Deal';\nconst newEventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  description: `<p><br></p>`,\n  isAllDay: false,\n  location: 'Manchester',\n  isRecurring: false,\n  startTime: `${todaysDate.add(5, 'days').format('YYYY-MM-DD')} 15:00`,\n  endTime: `${todaysDate.add(5, 'days').format('YYYY-MM-DD')} 16:00`,\n  dealId: dealID\n};\ncy.addEventWithAllData(globalCompanyID, newEventData).then(response => {\n  cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\n  cy.get('a[href=\"#tab-calendar-events\"]:first').click();\n  cy.get(`[data-event-id=\"${response.body}\"] .hover-link`).contains(eventName);\n  cy.removeEventAPI(response.body, false, userData);\n});",
                      "err": {},
                      "uuid": "c151015a-70ae-46ec-ada0-0ad5a24c2e58",
                      "parentUUID": "9fc8d421-a00f-4be7-8b1f-ecae1fd9737c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should delete test deal events",
                      "fullTitle": "dealer tab events deal event functionality should delete test deal events",
                      "timedOut": null,
                      "duration": 24046,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const eventName = 'Delete Event for Deal';\nconst newEventData = {\n  subscriberId: subscriberId,\n  globalUserId: salesRepGlobalUserId,\n  id: salesRepUserId,\n  userName: salesRepName,\n  name: eventName,\n  description: `<p><br></p>`,\n  isAllDay: false,\n  location: 'Manchester',\n  isRecurring: false,\n  startTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 15:00`,\n  endTime: `${(0, _moment.default)().format('YYYY-MM-DD')} 16:00`,\n  dealId: dealID\n};\ncy.addEventWithAllData(globalCompanyID, newEventData).then(response => {\n  cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealID));\n  cy.navigateToDealTab('events');\n  cy.deleteEventOnTab(eventName, response.body);\n  cy.wait(5000);\n  cy.get('.swal2-cancel').click();\n});",
                      "err": {},
                      "uuid": "e2c0d65a-f6c5-49d5-a688-56aa0b2d642a",
                      "parentUUID": "9fc8d421-a00f-4be7-8b1f-ecae1fd9737c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77f99412-5f98-4d40-aebb-74ce9fdce0da",
                    "c151015a-70ae-46ec-ada0-0ad5a24c2e58",
                    "e2c0d65a-f6c5-49d5-a688-56aa0b2d642a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 54478,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3224081c-4978-449f-b42b-91740cbafb50",
              "title": "tasks",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "2e16def3-f92c-4240-b70f-5356601014dd",
                  "title": "task validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "no tasks displays meaningful message",
                      "fullTitle": "dealer tab tasks task validation no tasks displays meaningful message",
                      "timedOut": null,
                      "duration": 14435,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.noTasks();",
                      "err": {},
                      "uuid": "796b4eec-1b78-403c-9d33-5380dc410ee5",
                      "parentUUID": "2e16def3-f92c-4240-b70f-5356601014dd",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "unable to proceed if used has not inputted data into task name, description and due date",
                      "fullTitle": "dealer tab tasks task validation unable to proceed if used has not inputted data into task name, description and due date",
                      "timedOut": null,
                      "duration": 3144,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.validationTaskTester();",
                      "err": {},
                      "uuid": "58d332ba-4cfe-4808-a292-55298934608a",
                      "parentUUID": "2e16def3-f92c-4240-b70f-5356601014dd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "796b4eec-1b78-403c-9d33-5380dc410ee5",
                    "58d332ba-4cfe-4808-a292-55298934608a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17579,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "6f120e72-5db0-46a7-8483-32712e2e83a4",
                  "title": "task functionality",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should add deal tasks",
                      "fullTitle": "dealer tab tasks task functionality should add deal tasks",
                      "timedOut": null,
                      "duration": 15032,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  method: 'POST',\n  url: '/api/task/SaveTask'\n}).as('saveTask');\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId)); // Click \"Add\" Task\ncy.navigateToDealTab('tasks');\ncy.addTask(newTask, uniqueTaskTitle);\ncy.get('.row-wrapper').invoke('attr', 'data-activityid').then(taskid => {\n  newTaskID = taskid;\n  cy.deleteTaskAPI(newTaskID, salesRepGlobalUserId, subscriberId);\n});",
                      "err": {},
                      "uuid": "906fab12-b352-4638-8099-62b87439f586",
                      "parentUUID": "6f120e72-5db0-46a7-8483-32712e2e83a4",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should delete test deal tasks",
                      "fullTitle": "dealer tab tasks task functionality should delete test deal tasks",
                      "timedOut": null,
                      "duration": 17676,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const taskNameDelete = 'Task name for edit';\ncy.request({\n  method: 'POST',\n  url: '/api/task/SaveTask',\n  body: {\n    'Task': {\n      'SubscriberId': subscriberId,\n      'OwnerUserIdGlobal': salesRepGlobalUserId,\n      'TaskName': taskNameDelete,\n      'Description': 'Description',\n      'DueDate': (0, _moment.default)().format('DD-MMM-YY'),\n      'DealIds': `${dealId}`,\n      'UpdateUserIdGlobal': salesRepGlobalUserId,\n      'CompanyIdGlobal': globalCompanyID,\n      'UserIdGlobal': salesRepGlobalUserId\n    }\n  }\n}).then(response => {\n  cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\n  cy.navigateToDealTab('tasks');\n  cy.deleteTask(response.body);\n});",
                      "err": {},
                      "uuid": "ef92fd24-d260-4c83-b7da-3373d7e1fd39",
                      "parentUUID": "6f120e72-5db0-46a7-8483-32712e2e83a4",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should edit deal tasks",
                      "fullTitle": "dealer tab tasks task functionality should edit deal tasks",
                      "timedOut": null,
                      "duration": 14714,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept({\n  url: '/api/task/SaveTask',\n  method: 'POST'\n}).as('saveTask');\ncy.request({\n  method: 'POST',\n  url: '/api/task/SaveTask',\n  body: {\n    'Task': {\n      'ActivityId': null,\n      'SubscriberId': subscriberId,\n      'OwnerUserIdGlobal': salesRepGlobalUserId,\n      'TaskName': 'Task name for edit',\n      'Description': 'Description',\n      'DueDate': '2020-03-31',\n      'DealIds': dealId,\n      'CompanyId': newCompanyId,\n      'UpdateUserIdGlobal': salesRepGlobalUserId,\n      'CompanyIdGlobal': globalContactID\n    },\n    'Invites': [{\n      'AttendeeType': 'contact',\n      'ContactId': null,\n      'ContactName': '',\n      'SubscriberId': subscriberId\n    }]\n  }\n}).then(response => {\n  cy.intercept({\n    url: `/api/Task/GetTask?taskId=${response.body}&subscriberId=${subscriberId}`,\n    method: 'GET'\n  }).as('editWait');\n  const taskID = response.body;\n  let newChangeTask = {\n    taskTitle: 'Another New Test Task Title'\n  };\n  cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\n  cy.navigateToDealTab('tasks');\n  cy.get(`div[data-activityid=\"${taskID}\"]`).contains('Task name for edit');\n  cy.get(`div[data-activityid=\"${taskID}\"] .fa.fa-edit`).click();\n  cy.wait('@editWait'); // Change Titleprimary-btn btnSaveTask\n  cy.fillForm(_forms.taskForm, newChangeTask);\n  cy.get('#TaskAddEdit_btnTaskAdd').click();\n  cy.wait('@saveTask');\n  cy.get(`div[data-activityid=\"${taskID}\"]`).contains(newChangeTask.taskTitle);\n  cy.deleteTaskAPI(taskID, salesRepGlobalUserId, subscriberId);\n});",
                      "err": {},
                      "uuid": "d820b0a1-ec24-4436-93d6-df689ca90387",
                      "parentUUID": "6f120e72-5db0-46a7-8483-32712e2e83a4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "906fab12-b352-4638-8099-62b87439f586",
                    "ef92fd24-d260-4c83-b7da-3373d7e1fd39",
                    "d820b0a1-ec24-4436-93d6-df689ca90387"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 47422,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
              "title": "notes",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "No notes shows meaningful message",
                  "fullTitle": "dealer tab notes No notes shows meaningful message",
                  "timedOut": null,
                  "duration": 11090,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateToDealTab('notes');\ncy.noNotesDisplaysCorrectly();",
                  "err": {},
                  "uuid": "2ddf4dd3-e78e-4bda-af8a-cc58b0a9b003",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Note validation (no note)",
                  "fullTitle": "dealer tab notes Note validation (no note)",
                  "timedOut": null,
                  "duration": 11341,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateToDealTab('notes');\ncy.checkNoNoteValidation();",
                  "err": {},
                  "uuid": "1572b539-4bac-45a5-ae28-42c6d248ce8a",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add deal notes",
                  "fullTitle": "dealer tab notes should add deal notes",
                  "timedOut": null,
                  "duration": 16257,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newNoteName = `Test Note ${(0, _helpers.stringGen)(7)}`;\nlet newNote = {\n  note: newNoteName\n};\ncy.navigateToDealTab('notes');\ncy.addNote(newNote, newNoteName, salesRepName, salesRepGlobalUserId);",
                  "err": {},
                  "uuid": "1a5c0ceb-5fdd-4de5-aac9-da619bbaa328",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should edit deal notes",
                  "fullTitle": "dealer tab notes should edit deal notes",
                  "timedOut": null,
                  "duration": 19956,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const addNoteAPI = {\n  globalCompanyId: globalCompanyID,\n  noteContent: `New Note For Edit ${(0, _helpers.stringGen)(5)}`,\n  contactId: 0,\n  dealId\n};\ncy.addNoteAPI('deal', addNoteAPI, userData).then(response => {\n  const noteId = response.body;\n  cy.reload();\n  cy.wait('@waitPageLoad');\n  cy.navigateToDealTab('notes');\n  cy.editNote(addNoteAPI.noteContent, `New Edit Note ${(0, _helpers.numGen)(5)}`, noteId, salesRepName, salesRepGlobalUserId);\n});",
                  "err": {},
                  "uuid": "c45a07d4-0c11-496d-89b8-b3cb7477483d",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should delete test deal notes",
                  "fullTitle": "dealer tab notes should delete test deal notes",
                  "timedOut": null,
                  "duration": 17222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const addNoteAPI = {\n  globalCompanyId: globalCompanyID,\n  noteContent: `New Note For Delete ${(0, _helpers.stringGen)(5)}`,\n  contactId: 0,\n  dealId\n};\ncy.addNoteAPI('deal', addNoteAPI, userData).then(response => {\n  const noteId = response.body;\n  cy.reload();\n  cy.wait('@waitPageLoad');\n  cy.navigateToDealTab('notes');\n  cy.wait(2000);\n  cy.deleteNote(addNoteAPI.noteContent, noteId);\n});",
                  "err": {},
                  "uuid": "3d54916b-2b02-49eb-b1b4-8c54b01dae76",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "add note on deal overview page",
                  "fullTitle": "dealer tab notes add note on deal overview page",
                  "timedOut": null,
                  "duration": 10206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept({\n  url: '/api/note/savenote',\n  method: 'POST'\n}).as('saveNote');\ncy.intercept('/api/note/GetNotes').as('getNote');\nconst noteText = (0, _helpers.stringGen)(20);\ncy.get('#txtNote').type(noteText);\ncy.get('#note-add > a').click();\ncy.wait('@saveNote').then(xhr => {\n  cy.wait('@getNote');\n  cy.get('#tab-notes').should('be.visible');\n  cy.get('[data-activityid] [data-col-id=\"createdDate\"]').should('have.text', (0, _moment.default)().tz('America/Los_Angeles').format('ddd, DD MMM, YYYY'));\n  cy.get('[data-activityid] [data-col-id=\"note\"]').should('have.text', noteText);\n  cy.get('[data-activityid] [data-col-id=\"owner\"]').should('have.text', salesRepName);\n});",
                  "err": {},
                  "uuid": "d9294ba0-e060-4ceb-a661-f8e50165a8cd",
                  "parentUUID": "f7bad505-0fb2-48cf-ba6c-291e2261b263",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ddf4dd3-e78e-4bda-af8a-cc58b0a9b003",
                "1572b539-4bac-45a5-ae28-42c6d248ce8a",
                "1a5c0ceb-5fdd-4de5-aac9-da619bbaa328",
                "c45a07d4-0c11-496d-89b8-b3cb7477483d",
                "3d54916b-2b02-49eb-b1b4-8c54b01dae76",
                "d9294ba0-e060-4ceb-a661-f8e50165a8cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 86072,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0db66f8b-7f0c-4eca-b5b6-4ce0ce127742",
              "title": "documents",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7d014e44-fc43-45be-b911-c2a364435645",
                  "title": "document validation",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "No documents message",
                      "fullTitle": "dealer tab documents document validation No documents message",
                      "timedOut": null,
                      "duration": 7081,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.noDocumentsValidation();",
                      "err": {},
                      "uuid": "36c96ddd-2a1c-4882-a2a9-f3fa08c69dd0",
                      "parentUUID": "7d014e44-fc43-45be-b911-c2a364435645",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Document validation - Title",
                      "fullTitle": "dealer tab documents document validation Document validation - Title",
                      "timedOut": null,
                      "duration": 6263,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.checkDocumentValidationMessage('title');",
                      "err": {},
                      "uuid": "3bb6ff6c-22d3-40fb-b2d2-51e251858a26",
                      "parentUUID": "7d014e44-fc43-45be-b911-c2a364435645",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Document validation - document",
                      "fullTitle": "dealer tab documents document validation Document validation - document",
                      "timedOut": null,
                      "duration": 6223,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.checkDocumentValidationMessage('document');",
                      "err": {},
                      "uuid": "7eb4b165-d924-4eb3-bfee-798a9fafdbc6",
                      "parentUUID": "7d014e44-fc43-45be-b911-c2a364435645",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Document validation - upload large image (over 10MB)",
                      "fullTitle": "dealer tab documents document validation Document validation - upload large image (over 10MB)",
                      "timedOut": null,
                      "duration": 6999,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.checkDocumentValidationMessage('largeFileType');",
                      "err": {},
                      "uuid": "e8b67d6f-a691-4d5f-add6-a56d23ee14df",
                      "parentUUID": "7d014e44-fc43-45be-b911-c2a364435645",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Document validation - Upload incorrect file type",
                      "fullTitle": "dealer tab documents document validation Document validation - Upload incorrect file type",
                      "timedOut": null,
                      "duration": 2816,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.checkDocumentValidationMessage('incorrectFileType');",
                      "err": {},
                      "uuid": "414f53e9-8517-4263-a4a1-70699250b30d",
                      "parentUUID": "7d014e44-fc43-45be-b911-c2a364435645",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "36c96ddd-2a1c-4882-a2a9-f3fa08c69dd0",
                    "3bb6ff6c-22d3-40fb-b2d2-51e251858a26",
                    "7eb4b165-d924-4eb3-bfee-798a9fafdbc6",
                    "e8b67d6f-a691-4d5f-add6-a56d23ee14df",
                    "414f53e9-8517-4263-a4a1-70699250b30d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 29382,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "f84c27fc-04f8-41a3-ba92-86b3e5063a08",
                  "title": "document functionality",
                  "fullFile": "",
                  "file": "",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should delete test deal documents",
                      "fullTitle": "dealer tab documents document functionality should delete test deal documents",
                      "timedOut": null,
                      "duration": 25451,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "// ADDING WITH API BREAKS DELETE?? NEEDS INVESTIGATING\n// cy.addDocumentAPI(dealId, userData)\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.addDocument('deal', globalCompanyID, '', dealId, newDocument, docTitle, newDocument.docDescription);\ncy.deleteDocument();",
                      "err": {},
                      "uuid": "a4fdc4a9-2da9-49de-a037-415ebe22dcc8",
                      "parentUUID": "f84c27fc-04f8-41a3-ba92-86b3e5063a08",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should add deal documents",
                      "fullTitle": "dealer tab documents document functionality should add deal documents",
                      "timedOut": null,
                      "duration": 19921,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.addDocument('deal', globalCompanyID, '', dealId, newDocument, docTitle, newDocument.docDescription);",
                      "err": {},
                      "uuid": "83321893-f9cf-448c-804f-f66a80caf9e0",
                      "parentUUID": "f84c27fc-04f8-41a3-ba92-86b3e5063a08",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should successfully download document",
                      "fullTitle": "dealer tab documents document functionality should successfully download document",
                      "timedOut": null,
                      "duration": 23456,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.addDocument('deal', globalCompanyID, '', dealId, newDocument, docTitle, newDocument.docDescription);\ncy.wait(2000);\ncy.get('#documentsWrapper [data-col-id=\"fileName\"] .hover-link').invoke('attr', 'href').then(downloadLink => {\n  cy.log(downloadLink);\n  cy.get(`a[href=\"${downloadLink}\"]`).should('be.visible');\n  cy.request({\n    method: 'GET',\n    url: downloadLink\n  }).then(response => {\n    expect(response.status).to.eq(200);\n  });\n});",
                      "err": {},
                      "uuid": "2bbd792c-127e-4fca-8485-ebd26892cd5a",
                      "parentUUID": "f84c27fc-04f8-41a3-ba92-86b3e5063a08",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should list deal documents",
                      "fullTitle": "dealer tab documents document functionality should list deal documents",
                      "timedOut": null,
                      "duration": 6382,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cy.intercept('/api/document/GetDocuments', {\n  fixture: 'documents/documentData.js'\n});\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId)); // click document tab\ncy.get('a[href=\"#tab-documents\"]:first').click(); // document title and description\ncy.get('#documentsWrapper .items-wrap .row-wrapper').should($documents => {\n  expect($documents, '3 items').to.have.length(3);\n  expect($documents.eq(0), 'first item').to.contain('Document 3 Title').to.contain('bird.jpg');\n  expect($documents.eq(1), 'second item').to.contain('Document 2 Title').to.contain('penguin.jpg');\n  expect($documents.eq(2), 'third item').to.contain('Document 1 Title').to.contain('sloth.jpg');\n});",
                      "err": {},
                      "uuid": "3e0dba83-a401-4795-ab95-680e4ad50505",
                      "parentUUID": "f84c27fc-04f8-41a3-ba92-86b3e5063a08",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a4fdc4a9-2da9-49de-a037-415ebe22dcc8",
                    "83321893-f9cf-448c-804f-f66a80caf9e0",
                    "2bbd792c-127e-4fca-8485-ebd26892cd5a",
                    "3e0dba83-a401-4795-ab95-680e4ad50505"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 75210,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "aff92072-efbf-48ee-9baf-56c633548cd6",
              "title": "contacts",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add new contact - contact",
                  "fullTitle": "dealer tab contacts should add new contact - contact",
                  "timedOut": null,
                  "duration": 22469,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var contactFullName = \"AAA \" + newContactName;\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.get('a[data-set=\"new_contact\"]:first').click();\ncy.get('a[data-target=\"#addContactDialog\"]').first().should('have.html', 'Add Contact').click();\ncy.get('span').contains('Select Contact').click();\ncy.wait(5000);\ncy.get('li').contains(contactFullName).first().should('be.visible').click();\ncy.get('#btnAddContactSave').should('be.visible').click();\ncy.wait(5000);\ncy.get('a').contains(contactFullName).should('be.visible');",
                  "err": {},
                  "uuid": "43135acd-ed42-46ad-921a-dcda39c3a62c",
                  "parentUUID": "aff92072-efbf-48ee-9baf-56c633548cd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should edit the contact - contact",
                  "fullTitle": "dealer tab contacts should edit the contact - contact",
                  "timedOut": null,
                  "duration": 18845,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newContactNumber = `+590 277${(0, _helpers.numGen)(3)}`;\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.get('a[data-set=\"new_contact\"]:first').click();\ncy.editContact(newContactName, newContactNumber);\ncy.get('.contact-card').contains(newContactNumber).should('be.visible');",
                  "err": {},
                  "uuid": "9b946477-d7f4-42ac-a69f-691fd2200958",
                  "parentUUID": "aff92072-efbf-48ee-9baf-56c633548cd6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should delete the contact - contact",
                  "fullTitle": "dealer tab contacts should delete the contact - contact",
                  "timedOut": null,
                  "duration": 14329,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var contactFullName = \"AAA \" + newContactName;\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.get('a[data-set=\"new_contact\"]:first').click();\ncy.removeContact(newContactName);\ncy.get('.contact-card').should('not.include.text', contactFullName);",
                  "err": {},
                  "uuid": "b836ed5c-fb2f-41bb-95c1-ccb34b28810f",
                  "parentUUID": "aff92072-efbf-48ee-9baf-56c633548cd6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "43135acd-ed42-46ad-921a-dcda39c3a62c",
                "9b946477-d7f4-42ac-a69f-691fd2200958",
                "b836ed5c-fb2f-41bb-95c1-ccb34b28810f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 55643,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ead1ca3a-8cef-4d68-b26f-02782a818084",
              "title": "sales team",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add the sales team member - team",
                  "fullTitle": "dealer tab sales team should add the sales team member - team",
                  "timedOut": null,
                  "duration": 24719,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newSalesMember = users['locationManager'];\nlet newSearch = {\n  salesTeamMember: newSalesMember.details.name,\n  salesTeamMemberSearch: newSalesMember.details.name,\n  salesRole: 'Country Leader'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.navigateToDealTab('salesTeam');\nconst newSalesTeamMember = {\n  salesName: newSearch.salesTeamMember,\n  salesJobTitle: newSalesMember.details.jobTitle,\n  salesLocation: newSalesMember.details.city,\n  salesEmail: newSalesMember.details.email,\n  salesAddress: newSalesMember.details.address,\n  salesNumber: newSalesMember.details.number,\n  salesRole: newSearch.salesRole\n};\ncy.addSalesTeamMember('add', newSearch, newSalesMember.userId, newSalesTeamMember);\ncy.removeSalesTeamMember(newSalesMember.userId, newSalesMember.details.name);",
                  "err": {},
                  "uuid": "3dbe9e48-dd3f-45b0-831e-7f9eb837c879",
                  "parentUUID": "ead1ca3a-8cef-4d68-b26f-02782a818084",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove the sales team member - team",
                  "fullTitle": "dealer tab sales team should remove the sales team member - team",
                  "timedOut": null,
                  "duration": 23664,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newSalesMember = users['locationManager'];\nlet newSearch = {\n  salesTeamMember: newSalesMember.details.name,\n  salesTeamMemberSearch: newSalesMember.details.name,\n  salesRole: 'Country Leader'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.navigateToDealTab('salesTeam');\nconst newSalesTeamMember = {\n  salesName: newSearch.salesTeamMember,\n  salesJobTitle: newSalesMember.details.jobTitle,\n  salesLocation: newSalesMember.details.city,\n  salesEmail: newSalesMember.details.email,\n  salesAddress: newSalesMember.details.address,\n  salesNumber: newSalesMember.details.number,\n  salesRole: newSearch.salesRole\n};\ncy.addSalesTeamMember('add', newSearch, newSalesMember.userId, newSalesTeamMember);\ncy.salesTeamChecker(newSalesMember.details.name, newSalesTeamMember.salesRole, newSalesMember.userId);\ncy.removeSalesTeamMember(newSalesMember.userId, newSalesMember.details.name);",
                  "err": {},
                  "uuid": "7b227e63-a192-4a7b-9521-54282e52cdab",
                  "parentUUID": "ead1ca3a-8cef-4d68-b26f-02782a818084",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should edit the sales team user role - team",
                  "fullTitle": "dealer tab sales team should edit the sales team user role - team",
                  "timedOut": null,
                  "duration": 36509,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const newSalesRoleSelector = {\n  salesRole: {\n    id: 'AddSalesTeamMember_ddlSalesTeamRole',\n    type: 'select',\n    option: {\n      force: true\n    }\n  }\n};\nlet newSalesRole = {\n  salesRole: 'Country Leader'\n};\nconst newSalesMember = users['locationManager'];\nlet newSearch = {\n  salesTeamMember: newSalesMember.details.name,\n  salesTeamMemberSearch: newSalesMember.details.name,\n  salesRole: 'Country Leader'\n};\nconst editSalesMember = users['locationManager'];\nlet editSearch = {\n  salesTeamMember: editSalesMember.details.name,\n  salesTeamMemberSearch: editSalesMember.details.name,\n  salesRole: 'Global Leader'\n};\ncy.navigateAndCheckURL((0, _urls.DEAL_DETAIL_URL)(dealId));\ncy.navigateToDealTab('salesTeam');\nconst newSalesTeamMember = {\n  salesName: newSearch.salesTeamMember,\n  salesJobTitle: newSalesMember.details.jobTitle,\n  salesLocation: newSalesMember.details.city,\n  salesEmail: newSalesMember.details.email,\n  salesAddress: newSalesMember.details.address,\n  salesNumber: newSalesMember.details.number,\n  userId: newSalesMember.details.userId,\n  salesRole: newSearch.salesRole,\n  editSalesRole: editSearch.salesRole\n};\ncy.addSalesTeamMember('add', newSearch, newSalesMember.userId, newSalesTeamMember);\ncy.salesTeamChecker(newSalesMember.details.name, newSalesTeamMember.salesRole, newSalesMember.userId);\ncy.editSalesTeamMember('edit', editSearch, newSalesMember.userId, newSalesTeamMember);\ncy.salesTeamChecker(newSalesMember.details.name, newSalesTeamMember.editSalesRole, newSalesMember.userId);\ncy.removeSalesTeamMember(newSalesMember.userId, newSalesMember.details.name);",
                  "err": {},
                  "uuid": "b399725e-45d2-444e-87ec-7616d61bf755",
                  "parentUUID": "ead1ca3a-8cef-4d68-b26f-02782a818084",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3dbe9e48-dd3f-45b0-831e-7f9eb837c879",
                "7b227e63-a192-4a7b-9521-54282e52cdab",
                "b399725e-45d2-444e-87ec-7616d61bf755"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 84892,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.0"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}